//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using System.Collections.Generic;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;
using GSF.ASN1.Types;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Sequence(Name = "ChangeAccessControl_Request", IsSet = false)]
    public class ChangeAccessControl_Request : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ChangeAccessControl_Request));
        private Identifier accessControlListName_;
        private ScopeOfChangeChoiceType scopeOfChange_;


        [ASN1Element(Name = "scopeOfChange", IsOptional = false, HasTag = false, HasDefaultValue = false)]
        public ScopeOfChangeChoiceType ScopeOfChange
        {
            get
            {
                return scopeOfChange_;
            }
            set
            {
                scopeOfChange_ = value;
            }
        }


        [ASN1Element(Name = "accessControlListName", IsOptional = false, HasTag = true, Tag = 2, HasDefaultValue = false)]
        public Identifier AccessControlListName
        {
            get
            {
                return accessControlListName_;
            }
            set
            {
                accessControlListName_ = value;
            }
        }


        public void initWithDefaults()
        {
        }


        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }

        [ASN1PreparedElement]
        [ASN1Choice(Name = "scopeOfChange")]
        public class ScopeOfChangeChoiceType : IASN1PreparedElement
        {
            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ScopeOfChangeChoiceType));
            private ListOfObjectsSequenceType listOfObjects_;
            private bool listOfObjects_selected;
            private NullObject vMDOnly_;
            private bool vMDOnly_selected;


            [ASN1Null(Name = "vMDOnly")]
            [ASN1Element(Name = "vMDOnly", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
            public NullObject VMDOnly
            {
                get
                {
                    return vMDOnly_;
                }
                set
                {
                    selectVMDOnly(value);
                }
            }


            [ASN1Element(Name = "listOfObjects", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
            public ListOfObjectsSequenceType ListOfObjects
            {
                get
                {
                    return listOfObjects_;
                }
                set
                {
                    selectListOfObjects(value);
                }
            }

            public void initWithDefaults()
            {
            }

            public IASN1PreparedElementData PreparedData
            {
                get
                {
                    return preparedData;
                }
            }


            public bool isVMDOnlySelected()
            {
                return vMDOnly_selected;
            }


            public void selectVMDOnly()
            {
                selectVMDOnly(new NullObject());
            }


            public void selectVMDOnly(NullObject val)
            {
                vMDOnly_ = val;
                vMDOnly_selected = true;


                listOfObjects_selected = false;
            }


            public bool isListOfObjectsSelected()
            {
                return listOfObjects_selected;
            }


            public void selectListOfObjects(ListOfObjectsSequenceType val)
            {
                listOfObjects_ = val;
                listOfObjects_selected = true;


                vMDOnly_selected = false;
            }

            [ASN1PreparedElement]
            [ASN1Sequence(Name = "listOfObjects", IsSet = false)]
            public class ListOfObjectsSequenceType : IASN1PreparedElement
            {
                private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ListOfObjectsSequenceType));
                private ObjectClass objectClass_;


                private ObjectScopeChoiceType objectScope_;

                [ASN1Element(Name = "objectClass", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
                public ObjectClass ObjectClass
                {
                    get
                    {
                        return objectClass_;
                    }
                    set
                    {
                        objectClass_ = value;
                    }
                }


                [ASN1Element(Name = "objectScope", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
                public ObjectScopeChoiceType ObjectScope
                {
                    get
                    {
                        return objectScope_;
                    }
                    set
                    {
                        objectScope_ = value;
                    }
                }


                public void initWithDefaults()
                {
                }

                public IASN1PreparedElementData PreparedData
                {
                    get
                    {
                        return preparedData;
                    }
                }

                [ASN1PreparedElement]
                [ASN1Choice(Name = "objectScope")]
                public class ObjectScopeChoiceType : IASN1PreparedElement
                {
                    private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ObjectScopeChoiceType));
                    private NullObject aa_specific_;
                    private bool aa_specific_selected;


                    private Identifier domain_;
                    private bool domain_selected;
                    private ICollection<ObjectName> specific_;
                    private bool specific_selected;


                    private NullObject vmd_;
                    private bool vmd_selected;

                    [ASN1SequenceOf(Name = "specific", IsSetOf = false)]
                    [ASN1Element(Name = "specific", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
                    public ICollection<ObjectName> Specific
                    {
                        get
                        {
                            return specific_;
                        }
                        set
                        {
                            selectSpecific(value);
                        }
                    }

                    [ASN1Null(Name = "aa-specific")]
                    [ASN1Element(Name = "aa-specific", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
                    public NullObject Aa_specific
                    {
                        get
                        {
                            return aa_specific_;
                        }
                        set
                        {
                            selectAa_specific(value);
                        }
                    }

                    [ASN1Element(Name = "domain", IsOptional = false, HasTag = true, Tag = 2, HasDefaultValue = false)]
                    public Identifier Domain
                    {
                        get
                        {
                            return domain_;
                        }
                        set
                        {
                            selectDomain(value);
                        }
                    }


                    [ASN1Null(Name = "vmd")]
                    [ASN1Element(Name = "vmd", IsOptional = false, HasTag = true, Tag = 3, HasDefaultValue = false)]
                    public NullObject Vmd
                    {
                        get
                        {
                            return vmd_;
                        }
                        set
                        {
                            selectVmd(value);
                        }
                    }

                    public void initWithDefaults()
                    {
                    }

                    public IASN1PreparedElementData PreparedData
                    {
                        get
                        {
                            return preparedData;
                        }
                    }


                    public bool isSpecificSelected()
                    {
                        return specific_selected;
                    }


                    public void selectSpecific(ICollection<ObjectName> val)
                    {
                        specific_ = val;
                        specific_selected = true;


                        aa_specific_selected = false;

                        domain_selected = false;

                        vmd_selected = false;
                    }


                    public bool isAa_specificSelected()
                    {
                        return aa_specific_selected;
                    }


                    public void selectAa_specific()
                    {
                        selectAa_specific(new NullObject());
                    }


                    public void selectAa_specific(NullObject val)
                    {
                        aa_specific_ = val;
                        aa_specific_selected = true;


                        specific_selected = false;

                        aa_specific_selected = false;

                        domain_selected = false;

                        vmd_selected = false;
                    }


                    public bool isDomainSelected()
                    {
                        return domain_selected;
                    }


                    public void selectDomain(Identifier val)
                    {
                        domain_ = val;
                        domain_selected = true;


                        specific_selected = false;

                        aa_specific_selected = false;

                        vmd_selected = false;
                    }


                    public bool isVmdSelected()
                    {
                        return vmd_selected;
                    }


                    public void selectVmd()
                    {
                        selectVmd(new NullObject());
                    }


                    public void selectVmd(NullObject val)
                    {
                        vmd_ = val;
                        vmd_selected = true;


                        specific_selected = false;

                        aa_specific_selected = false;

                        domain_selected = false;
                    }
                }
            }
        }
    }
}