//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Sequence(Name = "SemaphoreEntry", IsSet = false)]
    public class SemaphoreEntry : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(SemaphoreEntry));
        private bool abortOnTimeOut_;

        private bool abortOnTimeOut_present;
        private ApplicationReference applicationReference_;
        private long entryClass_;
        private byte[] entryID_;


        private Identifier namedToken_;

        private bool namedToken_present;


        private Priority priority_;
        private bool relinquishIfConnectionLost_;


        private Unsigned32 remainingTimeOut_;

        private bool remainingTimeOut_present;

        [ASN1OctetString(Name = "")]
        [ASN1Element(Name = "entryID", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public byte[] EntryID
        {
            get
            {
                return entryID_;
            }
            set
            {
                entryID_ = value;
            }
        }

        [ASN1Integer(Name = "")]
        [ASN1Element(Name = "entryClass", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public long EntryClass
        {
            get
            {
                return entryClass_;
            }
            set
            {
                entryClass_ = value;
            }
        }

        [ASN1Element(Name = "applicationReference", IsOptional = false, HasTag = true, Tag = 2, HasDefaultValue = false)]
        public ApplicationReference ApplicationReference
        {
            get
            {
                return applicationReference_;
            }
            set
            {
                applicationReference_ = value;
            }
        }

        [ASN1Element(Name = "namedToken", IsOptional = true, HasTag = true, Tag = 3, HasDefaultValue = false)]
        public Identifier NamedToken
        {
            get
            {
                return namedToken_;
            }
            set
            {
                namedToken_ = value;
                namedToken_present = true;
            }
        }

        [ASN1Element(Name = "priority", IsOptional = false, HasTag = true, Tag = 4, HasDefaultValue = true)]
        public Priority Priority
        {
            get
            {
                return priority_;
            }
            set
            {
                priority_ = value;
            }
        }

        [ASN1Element(Name = "remainingTimeOut", IsOptional = true, HasTag = true, Tag = 5, HasDefaultValue = false)]
        public Unsigned32 RemainingTimeOut
        {
            get
            {
                return remainingTimeOut_;
            }
            set
            {
                remainingTimeOut_ = value;
                remainingTimeOut_present = true;
            }
        }


        [ASN1Boolean(Name = "")]
        [ASN1Element(Name = "abortOnTimeOut", IsOptional = true, HasTag = true, Tag = 6, HasDefaultValue = false)]
        public bool AbortOnTimeOut
        {
            get
            {
                return abortOnTimeOut_;
            }
            set
            {
                abortOnTimeOut_ = value;
                abortOnTimeOut_present = true;
            }
        }


        [ASN1Boolean(Name = "")]
        [ASN1Element(Name = "relinquishIfConnectionLost", IsOptional = false, HasTag = true, Tag = 7, HasDefaultValue = true)]
        public bool RelinquishIfConnectionLost
        {
            get
            {
                return relinquishIfConnectionLost_;
            }
            set
            {
                relinquishIfConnectionLost_ = value;
            }
        }

        public void initWithDefaults()
        {
            Priority param_Priority =
                new Priority(64);
            Priority = param_Priority;
            bool param_RelinquishIfConnectionLost =
                false;
            RelinquishIfConnectionLost = param_RelinquishIfConnectionLost;
        }

        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }


        public bool isNamedTokenPresent()
        {
            return namedToken_present;
        }

        public bool isRemainingTimeOutPresent()
        {
            return remainingTimeOut_present;
        }

        public bool isAbortOnTimeOutPresent()
        {
            return abortOnTimeOut_present;
        }
    }
}