//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using System.Collections.Generic;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Sequence(Name = "GetAlarmEnrollmentSummary_Response", IsSet = false)]
    public class GetAlarmEnrollmentSummary_Response : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(GetAlarmEnrollmentSummary_Response));
        private ICollection<AlarmEnrollmentSummary> listOfAlarmEnrollmentSummary_;


        private bool moreFollows_;

        [ASN1SequenceOf(Name = "listOfAlarmEnrollmentSummary", IsSetOf = false)]
        [ASN1Element(Name = "listOfAlarmEnrollmentSummary", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public ICollection<AlarmEnrollmentSummary> ListOfAlarmEnrollmentSummary
        {
            get
            {
                return listOfAlarmEnrollmentSummary_;
            }
            set
            {
                listOfAlarmEnrollmentSummary_ = value;
            }
        }

        [ASN1Boolean(Name = "")]
        [ASN1Element(Name = "moreFollows", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = true)]
        public bool MoreFollows
        {
            get
            {
                return moreFollows_;
            }
            set
            {
                moreFollows_ = value;
            }
        }


        public void initWithDefaults()
        {
            bool param_MoreFollows =
                false;
            MoreFollows = param_MoreFollows;
        }


        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }
    }
}