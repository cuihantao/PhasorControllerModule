//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Choice(Name = "AdditionalService_Error")]
    public class AdditionalService_Error : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(AdditionalService_Error));
        private AddEventConditionListReference_Error addECLReference_;
        private bool addECLReference_selected;
        private DefineEventConditionList_Error defineEcl_;
        private bool defineEcl_selected;
        private DeleteUnitControl_Error deleteUC_;
        private bool deleteUC_selected;


        private InitiateUnitControl_Error initiateUC_;
        private bool initiateUC_selected;
        private LoadUnitControlFromFile_Error loadUCFromFile_;
        private bool loadUCFromFile_selected;
        private RemoveEventConditionListReference_Error removeECLReference_;
        private bool removeECLReference_selected;


        private StartUnitControl_Error startUC_;
        private bool startUC_selected;


        private StopUnitControl_Error stopUC_;
        private bool stopUC_selected;

        [ASN1Element(Name = "defineEcl", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public DefineEventConditionList_Error DefineEcl
        {
            get
            {
                return defineEcl_;
            }
            set
            {
                selectDefineEcl(value);
            }
        }

        [ASN1Element(Name = "addECLReference", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public AddEventConditionListReference_Error AddECLReference
        {
            get
            {
                return addECLReference_;
            }
            set
            {
                selectAddECLReference(value);
            }
        }

        [ASN1Element(Name = "removeECLReference", IsOptional = false, HasTag = true, Tag = 2, HasDefaultValue = false)]
        public RemoveEventConditionListReference_Error RemoveECLReference
        {
            get
            {
                return removeECLReference_;
            }
            set
            {
                selectRemoveECLReference(value);
            }
        }

        [ASN1Element(Name = "initiateUC", IsOptional = false, HasTag = true, Tag = 3, HasDefaultValue = false)]
        public InitiateUnitControl_Error InitiateUC
        {
            get
            {
                return initiateUC_;
            }
            set
            {
                selectInitiateUC(value);
            }
        }

        [ASN1Element(Name = "startUC", IsOptional = false, HasTag = true, Tag = 4, HasDefaultValue = false)]
        public StartUnitControl_Error StartUC
        {
            get
            {
                return startUC_;
            }
            set
            {
                selectStartUC(value);
            }
        }


        [ASN1Element(Name = "stopUC", IsOptional = false, HasTag = true, Tag = 5, HasDefaultValue = false)]
        public StopUnitControl_Error StopUC
        {
            get
            {
                return stopUC_;
            }
            set
            {
                selectStopUC(value);
            }
        }


        [ASN1Element(Name = "deleteUC", IsOptional = false, HasTag = true, Tag = 6, HasDefaultValue = false)]
        public DeleteUnitControl_Error DeleteUC
        {
            get
            {
                return deleteUC_;
            }
            set
            {
                selectDeleteUC(value);
            }
        }


        [ASN1Element(Name = "loadUCFromFile", IsOptional = false, HasTag = true, Tag = 7, HasDefaultValue = false)]
        public LoadUnitControlFromFile_Error LoadUCFromFile
        {
            get
            {
                return loadUCFromFile_;
            }
            set
            {
                selectLoadUCFromFile(value);
            }
        }

        public void initWithDefaults()
        {
        }

        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }


        public bool isDefineEclSelected()
        {
            return defineEcl_selected;
        }


        public void selectDefineEcl(DefineEventConditionList_Error val)
        {
            defineEcl_ = val;
            defineEcl_selected = true;


            addECLReference_selected = false;

            removeECLReference_selected = false;

            initiateUC_selected = false;

            startUC_selected = false;

            stopUC_selected = false;

            deleteUC_selected = false;

            loadUCFromFile_selected = false;
        }


        public bool isAddECLReferenceSelected()
        {
            return addECLReference_selected;
        }


        public void selectAddECLReference(AddEventConditionListReference_Error val)
        {
            addECLReference_ = val;
            addECLReference_selected = true;


            defineEcl_selected = false;

            removeECLReference_selected = false;

            initiateUC_selected = false;

            startUC_selected = false;

            stopUC_selected = false;

            deleteUC_selected = false;

            loadUCFromFile_selected = false;
        }


        public bool isRemoveECLReferenceSelected()
        {
            return removeECLReference_selected;
        }


        public void selectRemoveECLReference(RemoveEventConditionListReference_Error val)
        {
            removeECLReference_ = val;
            removeECLReference_selected = true;


            defineEcl_selected = false;

            addECLReference_selected = false;

            initiateUC_selected = false;

            startUC_selected = false;

            stopUC_selected = false;

            deleteUC_selected = false;

            loadUCFromFile_selected = false;
        }


        public bool isInitiateUCSelected()
        {
            return initiateUC_selected;
        }


        public void selectInitiateUC(InitiateUnitControl_Error val)
        {
            initiateUC_ = val;
            initiateUC_selected = true;


            defineEcl_selected = false;

            addECLReference_selected = false;

            removeECLReference_selected = false;

            startUC_selected = false;

            stopUC_selected = false;

            deleteUC_selected = false;

            loadUCFromFile_selected = false;
        }


        public bool isStartUCSelected()
        {
            return startUC_selected;
        }


        public void selectStartUC(StartUnitControl_Error val)
        {
            startUC_ = val;
            startUC_selected = true;


            defineEcl_selected = false;

            addECLReference_selected = false;

            removeECLReference_selected = false;

            initiateUC_selected = false;

            stopUC_selected = false;

            deleteUC_selected = false;

            loadUCFromFile_selected = false;
        }


        public bool isStopUCSelected()
        {
            return stopUC_selected;
        }


        public void selectStopUC(StopUnitControl_Error val)
        {
            stopUC_ = val;
            stopUC_selected = true;


            defineEcl_selected = false;

            addECLReference_selected = false;

            removeECLReference_selected = false;

            initiateUC_selected = false;

            startUC_selected = false;

            deleteUC_selected = false;

            loadUCFromFile_selected = false;
        }


        public bool isDeleteUCSelected()
        {
            return deleteUC_selected;
        }


        public void selectDeleteUC(DeleteUnitControl_Error val)
        {
            deleteUC_ = val;
            deleteUC_selected = true;


            defineEcl_selected = false;

            addECLReference_selected = false;

            removeECLReference_selected = false;

            initiateUC_selected = false;

            startUC_selected = false;

            stopUC_selected = false;

            loadUCFromFile_selected = false;
        }


        public bool isLoadUCFromFileSelected()
        {
            return loadUCFromFile_selected;
        }


        public void selectLoadUCFromFile(LoadUnitControlFromFile_Error val)
        {
            loadUCFromFile_ = val;
            loadUCFromFile_selected = true;


            defineEcl_selected = false;

            addECLReference_selected = false;

            removeECLReference_selected = false;

            initiateUC_selected = false;

            startUC_selected = false;

            stopUC_selected = false;

            deleteUC_selected = false;
        }
    }
}