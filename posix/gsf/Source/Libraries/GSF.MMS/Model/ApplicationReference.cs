//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Sequence(Name = "ApplicationReference", IsSet = false)]
    public class ApplicationReference : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ApplicationReference));
        private AE_invocation_identifier ae_invocation_id_;

        private bool ae_invocation_id_present;
        private AE_qualifier ae_qualifier_;

        private bool ae_qualifier_present;
        private AP_invocation_identifier ap_invocation_id_;

        private bool ap_invocation_id_present;
        private AP_title ap_title_;

        private bool ap_title_present;

        [ASN1Element(Name = "ap-title", IsOptional = true, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public AP_title Ap_title
        {
            get
            {
                return ap_title_;
            }
            set
            {
                ap_title_ = value;
                ap_title_present = true;
            }
        }


        [ASN1Element(Name = "ap-invocation-id", IsOptional = true, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public AP_invocation_identifier Ap_invocation_id
        {
            get
            {
                return ap_invocation_id_;
            }
            set
            {
                ap_invocation_id_ = value;
                ap_invocation_id_present = true;
            }
        }


        [ASN1Element(Name = "ae-qualifier", IsOptional = true, HasTag = true, Tag = 2, HasDefaultValue = false)]
        public AE_qualifier Ae_qualifier
        {
            get
            {
                return ae_qualifier_;
            }
            set
            {
                ae_qualifier_ = value;
                ae_qualifier_present = true;
            }
        }


        [ASN1Element(Name = "ae-invocation-id", IsOptional = true, HasTag = true, Tag = 3, HasDefaultValue = false)]
        public AE_invocation_identifier Ae_invocation_id
        {
            get
            {
                return ae_invocation_id_;
            }
            set
            {
                ae_invocation_id_ = value;
                ae_invocation_id_present = true;
            }
        }

        public void initWithDefaults()
        {
        }

        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }


        public bool isAp_titlePresent()
        {
            return ap_title_present;
        }

        public bool isAp_invocation_idPresent()
        {
            return ap_invocation_id_present;
        }

        public bool isAe_qualifierPresent()
        {
            return ae_qualifier_present;
        }

        public bool isAe_invocation_idPresent()
        {
            return ae_invocation_id_present;
        }
    }
}