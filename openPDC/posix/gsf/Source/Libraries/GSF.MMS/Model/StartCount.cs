//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;
using GSF.ASN1.Types;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Choice(Name = "StartCount")]
    public class StartCount : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(StartCount));
        private long cycleCount_;
        private bool cycleCount_selected;
        private NullObject noLimit_;
        private bool noLimit_selected;


        private long stepCount_;
        private bool stepCount_selected;

        [ASN1Null(Name = "noLimit")]
        [ASN1Element(Name = "noLimit", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public NullObject NoLimit
        {
            get
            {
                return noLimit_;
            }
            set
            {
                selectNoLimit(value);
            }
        }

        [ASN1Integer(Name = "")]
        [ASN1Element(Name = "cycleCount", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public long CycleCount
        {
            get
            {
                return cycleCount_;
            }
            set
            {
                selectCycleCount(value);
            }
        }


        [ASN1Integer(Name = "")]
        [ASN1Element(Name = "stepCount", IsOptional = false, HasTag = true, Tag = 2, HasDefaultValue = false)]
        public long StepCount
        {
            get
            {
                return stepCount_;
            }
            set
            {
                selectStepCount(value);
            }
        }

        public void initWithDefaults()
        {
        }

        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }


        public bool isNoLimitSelected()
        {
            return noLimit_selected;
        }


        public void selectNoLimit()
        {
            selectNoLimit(new NullObject());
        }


        public void selectNoLimit(NullObject val)
        {
            noLimit_ = val;
            noLimit_selected = true;


            cycleCount_selected = false;

            stepCount_selected = false;
        }


        public bool isCycleCountSelected()
        {
            return cycleCount_selected;
        }


        public void selectCycleCount(long val)
        {
            cycleCount_ = val;
            cycleCount_selected = true;


            noLimit_selected = false;

            stepCount_selected = false;
        }


        public bool isStepCountSelected()
        {
            return stepCount_selected;
        }


        public void selectStepCount(long val)
        {
            stepCount_ = val;
            stepCount_selected = true;


            noLimit_selected = false;

            cycleCount_selected = false;
        }
    }
}