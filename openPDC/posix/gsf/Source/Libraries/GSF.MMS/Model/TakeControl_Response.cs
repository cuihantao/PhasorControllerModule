//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;
using GSF.ASN1.Types;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Choice(Name = "TakeControl_Response")]
    public class TakeControl_Response : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(TakeControl_Response));
        private Identifier namedToken_;
        private bool namedToken_selected;
        private NullObject noResult_;
        private bool noResult_selected;


        [ASN1Null(Name = "noResult")]
        [ASN1Element(Name = "noResult", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public NullObject NoResult
        {
            get
            {
                return noResult_;
            }
            set
            {
                selectNoResult(value);
            }
        }


        [ASN1Element(Name = "namedToken", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public Identifier NamedToken
        {
            get
            {
                return namedToken_;
            }
            set
            {
                selectNamedToken(value);
            }
        }

        public void initWithDefaults()
        {
        }

        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }


        public bool isNoResultSelected()
        {
            return noResult_selected;
        }


        public void selectNoResult()
        {
            selectNoResult(new NullObject());
        }


        public void selectNoResult(NullObject val)
        {
            noResult_ = val;
            noResult_selected = true;


            namedToken_selected = false;
        }


        public bool isNamedTokenSelected()
        {
            return namedToken_selected;
        }


        public void selectNamedToken(Identifier val)
        {
            namedToken_ = val;
            namedToken_selected = true;


            noResult_selected = false;
        }
    }
}