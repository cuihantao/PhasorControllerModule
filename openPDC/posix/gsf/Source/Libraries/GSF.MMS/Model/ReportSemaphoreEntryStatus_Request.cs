//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Sequence(Name = "ReportSemaphoreEntryStatus_Request", IsSet = false)]
    public class ReportSemaphoreEntryStatus_Request : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ReportSemaphoreEntryStatus_Request));
        private byte[] entryIDToStartAfter_;

        private bool entryIDToStartAfter_present;
        private ObjectName semaphoreName_;


        private long state_;

        [ASN1Element(Name = "semaphoreName", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = false)]
        public ObjectName SemaphoreName
        {
            get
            {
                return semaphoreName_;
            }
            set
            {
                semaphoreName_ = value;
            }
        }

        [ASN1Integer(Name = "")]
        [ASN1Element(Name = "state", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public long State
        {
            get
            {
                return state_;
            }
            set
            {
                state_ = value;
            }
        }


        [ASN1OctetString(Name = "")]
        [ASN1Element(Name = "entryIDToStartAfter", IsOptional = true, HasTag = true, Tag = 2, HasDefaultValue = false)]
        public byte[] EntryIDToStartAfter
        {
            get
            {
                return entryIDToStartAfter_;
            }
            set
            {
                entryIDToStartAfter_ = value;
                entryIDToStartAfter_present = true;
            }
        }


        public void initWithDefaults()
        {
        }


        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }

        public bool isEntryIDToStartAfterPresent()
        {
            return entryIDToStartAfter_present;
        }
    }
}