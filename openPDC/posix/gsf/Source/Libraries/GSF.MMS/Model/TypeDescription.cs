//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

using System.Runtime.CompilerServices;
using System.Collections.Generic;
using GSF.ASN1;
using GSF.ASN1.Attributes;
using GSF.ASN1.Coders;
using GSF.ASN1.Types;

namespace GSF.MMS.Model
{
    
    [ASN1PreparedElement]
    [ASN1Choice(Name = "TypeDescription")]
    public class TypeDescription : IASN1PreparedElement
    {
        private static readonly IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(TypeDescription));
        private ArraySequenceType array_;
        private bool array_selected;
        private Unsigned8 bcd_;
        private bool bcd_selected;
        private bool binary_time_;
        private bool binary_time_selected;


        private Integer32 bit_string_;
        private bool bit_string_selected;
        private NullObject boolean_;
        private bool boolean_selected;
        private Floating_pointSequenceType floating_point_;
        private bool floating_point_selected;
        private NullObject generalized_time_;
        private bool generalized_time_selected;


        private Unsigned8 integer_;
        private bool integer_selected;
        private Integer32 mMSString_;
        private bool mMSString_selected;
        private NullObject objId_;
        private bool objId_selected;
        private Integer32 octet_string_;
        private bool octet_string_selected;
        private StructureSequenceType structure_;
        private bool structure_selected;


        private Unsigned8 unsigned_;
        private bool unsigned_selected;
        private UtcTime utc_time_;
        private bool utc_time_selected;
        private Integer32 visible_string_;
        private bool visible_string_selected;

        [ASN1Element(Name = "array", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
        public ArraySequenceType Array
        {
            get
            {
                return array_;
            }
            set
            {
                selectArray(value);
            }
        }

        [ASN1Element(Name = "structure", IsOptional = false, HasTag = true, Tag = 2, HasDefaultValue = false)]
        public StructureSequenceType Structure
        {
            get
            {
                return structure_;
            }
            set
            {
                selectStructure(value);
            }
        }

        [ASN1Null(Name = "boolean")]
        [ASN1Element(Name = "boolean", IsOptional = false, HasTag = true, Tag = 3, HasDefaultValue = false)]
        public NullObject Boolean
        {
            get
            {
                return boolean_;
            }
            set
            {
                selectBoolean(value);
            }
        }

        [ASN1Element(Name = "bit-string", IsOptional = false, HasTag = true, Tag = 4, HasDefaultValue = false)]
        public Integer32 Bit_string
        {
            get
            {
                return bit_string_;
            }
            set
            {
                selectBit_string(value);
            }
        }

        [ASN1Element(Name = "integer", IsOptional = false, HasTag = true, Tag = 5, HasDefaultValue = false)]
        public Unsigned8 Integer
        {
            get
            {
                return integer_;
            }
            set
            {
                selectInteger(value);
            }
        }


        [ASN1Element(Name = "unsigned", IsOptional = false, HasTag = true, Tag = 6, HasDefaultValue = false)]
        public Unsigned8 Unsigned
        {
            get
            {
                return unsigned_;
            }
            set
            {
                selectUnsigned(value);
            }
        }


        [ASN1Element(Name = "floating-point", IsOptional = false, HasTag = true, Tag = 7, HasDefaultValue = false)]
        public Floating_pointSequenceType Floating_point
        {
            get
            {
                return floating_point_;
            }
            set
            {
                selectFloating_point(value);
            }
        }


        [ASN1Element(Name = "octet-string", IsOptional = false, HasTag = true, Tag = 9, HasDefaultValue = false)]
        public Integer32 Octet_string
        {
            get
            {
                return octet_string_;
            }
            set
            {
                selectOctet_string(value);
            }
        }


        [ASN1Element(Name = "visible-string", IsOptional = false, HasTag = true, Tag = 10, HasDefaultValue = false)]
        public Integer32 Visible_string
        {
            get
            {
                return visible_string_;
            }
            set
            {
                selectVisible_string(value);
            }
        }


        [ASN1Null(Name = "generalized-time")]
        [ASN1Element(Name = "generalized-time", IsOptional = false, HasTag = true, Tag = 11, HasDefaultValue = false)]
        public NullObject Generalized_time
        {
            get
            {
                return generalized_time_;
            }
            set
            {
                selectGeneralized_time(value);
            }
        }


        [ASN1Boolean(Name = "binary-time")]
        [ASN1Element(Name = "binary-time", IsOptional = false, HasTag = true, Tag = 12, HasDefaultValue = false)]
        public bool Binary_time
        {
            get
            {
                return binary_time_;
            }
            set
            {
                selectBinary_time(value);
            }
        }


        [ASN1Element(Name = "bcd", IsOptional = false, HasTag = true, Tag = 13, HasDefaultValue = false)]
        public Unsigned8 Bcd
        {
            get
            {
                return bcd_;
            }
            set
            {
                selectBcd(value);
            }
        }


        [ASN1Null(Name = "objId")]
        [ASN1Element(Name = "objId", IsOptional = false, HasTag = true, Tag = 15, HasDefaultValue = false)]
        public NullObject ObjId
        {
            get
            {
                return objId_;
            }
            set
            {
                selectObjId(value);
            }
        }


        [ASN1Element(Name = "mMSString", IsOptional = false, HasTag = true, Tag = 16, HasDefaultValue = false)]
        public Integer32 MMSString
        {
            get
            {
                return mMSString_;
            }
            set
            {
                selectMMSString(value);
            }
        }


        [ASN1Element(Name = "utc-time", IsOptional = false, HasTag = true, Tag = 17, HasDefaultValue = false)]
        public UtcTime Utc_time
        {
            get
            {
                return utc_time_;
            }
            set
            {
                selectUtc_time(value);
            }
        }

        public void initWithDefaults()
        {
        }

        public IASN1PreparedElementData PreparedData
        {
            get
            {
                return preparedData;
            }
        }


        public bool isArraySelected()
        {
            return array_selected;
        }


        public void selectArray(ArraySequenceType val)
        {
            array_ = val;
            array_selected = true;


            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isStructureSelected()
        {
            return structure_selected;
        }


        public void selectStructure(StructureSequenceType val)
        {
            structure_ = val;
            structure_selected = true;


            array_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isBooleanSelected()
        {
            return boolean_selected;
        }


        /*public void selectBoolean()
        {
            selectBoolean(new NullObject());
        }*/


        public void selectBoolean(NullObject val)
        {
            boolean_ = val;
            boolean_selected = true;


            array_selected = false;

            structure_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isBit_stringSelected()
        {
            return bit_string_selected;
        }


        public void selectBit_string(Integer32 val)
        {
            bit_string_ = val;
            bit_string_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isIntegerSelected()
        {
            return integer_selected;
        }


        public void selectInteger(Unsigned8 val)
        {
            integer_ = val;
            integer_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isUnsignedSelected()
        {
            return unsigned_selected;
        }


        public void selectUnsigned(Unsigned8 val)
        {
            unsigned_ = val;
            unsigned_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isFloating_pointSelected()
        {
            return floating_point_selected;
        }


        public void selectFloating_point(Floating_pointSequenceType val)
        {
            floating_point_ = val;
            floating_point_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isOctet_stringSelected()
        {
            return octet_string_selected;
        }


        public void selectOctet_string(Integer32 val)
        {
            octet_string_ = val;
            octet_string_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isVisible_stringSelected()
        {
            return visible_string_selected;
        }


        public void selectVisible_string(Integer32 val)
        {
            visible_string_ = val;
            visible_string_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isGeneralized_timeSelected()
        {
            return generalized_time_selected;
        }


        /*public void selectGeneralized_time()
        {
            selectGeneralized_time(new NullObject());
        }*/


        public void selectGeneralized_time(NullObject val)
        {
            generalized_time_ = val;
            generalized_time_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isBinary_timeSelected()
        {
            return binary_time_selected;
        }


        public void selectBinary_time(bool val)
        {
            binary_time_ = val;
            binary_time_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isBcdSelected()
        {
            return bcd_selected;
        }


        public void selectBcd(Unsigned8 val)
        {
            bcd_ = val;
            bcd_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            objId_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isObjIdSelected()
        {
            return objId_selected;
        }


        /* public void selectObjId()
        {
            selectObjId(new NullObject());
        }*/


        public void selectObjId(NullObject val)
        {
            objId_ = val;
            objId_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            mMSString_selected = false;

            utc_time_selected = false;
        }


        public bool isMMSStringSelected()
        {
            return mMSString_selected;
        }


        public void selectMMSString(Integer32 val)
        {
            mMSString_ = val;
            mMSString_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            utc_time_selected = false;
        }


        public bool isUtc_timeSelected()
        {
            return utc_time_selected;
        }


        public void selectUtc_time(UtcTime val)
        {
            utc_time_ = val;
            utc_time_selected = true;


            array_selected = false;

            structure_selected = false;

            boolean_selected = false;

            bit_string_selected = false;

            integer_selected = false;

            unsigned_selected = false;

            floating_point_selected = false;

            octet_string_selected = false;

            visible_string_selected = false;

            generalized_time_selected = false;

            binary_time_selected = false;

            bcd_selected = false;

            objId_selected = false;

            mMSString_selected = false;
        }

        [ASN1PreparedElement]
        [ASN1Sequence(Name = "array", IsSet = false)]
        public class ArraySequenceType : IASN1PreparedElement
        {
            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ArraySequenceType));
            private TypeSpecification elementType_;
            private Unsigned32 numberOfElements_;
            private bool packed_;

            [ASN1Boolean(Name = "packed")]
            [ASN1Element(Name = "packed", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = true)]
            public bool Packed
            {
                get
                {
                    return packed_;
                }
                set
                {
                    packed_ = value;
                }
            }


            [ASN1Element(Name = "numberOfElements", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
            public Unsigned32 NumberOfElements
            {
                get
                {
                    return numberOfElements_;
                }
                set
                {
                    numberOfElements_ = value;
                }
            }


            [ASN1Element(Name = "elementType", IsOptional = false, HasTag = true, Tag = 2, HasDefaultValue = false)]
            public TypeSpecification ElementType
            {
                get
                {
                    return elementType_;
                }
                set
                {
                    elementType_ = value;
                }
            }


            public void initWithDefaults()
            {
                bool param_Packed =
                    false;
                Packed = param_Packed;
            }

            public IASN1PreparedElementData PreparedData
            {
                get
                {
                    return preparedData;
                }
            }
        }

        [ASN1PreparedElement]
        [ASN1Sequence(Name = "floating-point", IsSet = false)]
        public class Floating_pointSequenceType : IASN1PreparedElement
        {
            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(Floating_pointSequenceType));
            private Unsigned8 exponent_width_;
            private Unsigned8 format_width_;

            [ASN1Element(Name = "format-width", IsOptional = false, HasTag = false, HasDefaultValue = false)]
            public Unsigned8 Format_width
            {
                get
                {
                    return format_width_;
                }
                set
                {
                    format_width_ = value;
                }
            }


            [ASN1Element(Name = "exponent-width", IsOptional = false, HasTag = false, HasDefaultValue = false)]
            public Unsigned8 Exponent_width
            {
                get
                {
                    return exponent_width_;
                }
                set
                {
                    exponent_width_ = value;
                }
            }


            public void initWithDefaults()
            {
            }

            public IASN1PreparedElementData PreparedData
            {
                get
                {
                    return preparedData;
                }
            }
        }

        [ASN1PreparedElement]
        [ASN1Sequence(Name = "structure", IsSet = false)]
        public class StructureSequenceType : IASN1PreparedElement
        {
            private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(StructureSequenceType));
            private ICollection<ComponentsSequenceType> components_;
            private bool packed_;

            [ASN1Boolean(Name = "")]
            [ASN1Element(Name = "packed", IsOptional = false, HasTag = true, Tag = 0, HasDefaultValue = true)]
            public bool Packed
            {
                get
                {
                    return packed_;
                }
                set
                {
                    packed_ = value;
                }
            }


            [ASN1SequenceOf(Name = "components", IsSetOf = false)]
            [ASN1Element(Name = "components", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
            public ICollection<ComponentsSequenceType> Components
            {
                get
                {
                    return components_;
                }
                set
                {
                    components_ = value;
                }
            }


            public void initWithDefaults()
            {
                bool param_Packed =
                    false;
                Packed = param_Packed;
            }

            public IASN1PreparedElementData PreparedData
            {
                get
                {
                    return preparedData;
                }
            }

            [ASN1PreparedElement]
            [ASN1Sequence(Name = "components", IsSet = false)]
            public class ComponentsSequenceType : IASN1PreparedElement
            {
                private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(typeof(ComponentsSequenceType));
                private Identifier componentName_;

                private bool componentName_present;


                private TypeSpecification componentType_;

                [ASN1Element(Name = "componentName", IsOptional = true, HasTag = true, Tag = 0, HasDefaultValue = false)]
                public Identifier ComponentName
                {
                    get
                    {
                        return componentName_;
                    }
                    set
                    {
                        componentName_ = value;
                        componentName_present = true;
                    }
                }

                [ASN1Element(Name = "componentType", IsOptional = false, HasTag = true, Tag = 1, HasDefaultValue = false)]
                public TypeSpecification ComponentType
                {
                    get
                    {
                        return componentType_;
                    }
                    set
                    {
                        componentType_ = value;
                    }
                }


                public void initWithDefaults()
                {
                }

                public IASN1PreparedElementData PreparedData
                {
                    get
                    {
                        return preparedData;
                    }
                }

                public bool isComponentNamePresent()
                {
                    return componentName_present;
                }
            }
        }
    }
}